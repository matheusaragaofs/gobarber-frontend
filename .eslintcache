[{"C:\\Users\\mathe\\Desktop\\gobarber-web\\src\\index.tsx":"1","C:\\Users\\mathe\\Desktop\\gobarber-web\\src\\App.tsx":"2","C:\\Users\\mathe\\Desktop\\gobarber-web\\src\\styles\\global.ts":"3","C:\\Users\\mathe\\Desktop\\gobarber-web\\src\\pages\\SignIn\\index.tsx":"4","C:\\Users\\mathe\\Desktop\\gobarber-web\\src\\pages\\SignIn\\styles.ts":"5","C:\\Users\\mathe\\Desktop\\gobarber-web\\src\\components\\Input\\index.tsx":"6","C:\\Users\\mathe\\Desktop\\gobarber-web\\src\\components\\Button\\index.tsx":"7","C:\\Users\\mathe\\Desktop\\gobarber-web\\src\\components\\Button\\styles.ts":"8","C:\\Users\\mathe\\Desktop\\gobarber-web\\src\\components\\Input\\styles.ts":"9","C:\\Users\\mathe\\Desktop\\gobarber-web\\src\\pages\\SignUp\\index.tsx":"10","C:\\Users\\mathe\\Desktop\\gobarber-web\\src\\pages\\SignUp\\styles.ts":"11"},{"size":198,"mtime":1609979455514,"results":"12","hashOfConfig":"13"},{"size":274,"mtime":1609999474395,"results":"14","hashOfConfig":"13"},{"size":433,"mtime":1609980189167,"results":"15","hashOfConfig":"13"},{"size":910,"mtime":1609997093516,"results":"16","hashOfConfig":"13"},{"size":1452,"mtime":1609996680448,"results":"17","hashOfConfig":"13"},{"size":1573,"mtime":1610033384203,"results":"18","hashOfConfig":"13"},{"size":338,"mtime":1609997170863,"results":"19","hashOfConfig":"13"},{"size":381,"mtime":1609997436740,"results":"20","hashOfConfig":"13"},{"size":751,"mtime":1610039333685,"results":"21","hashOfConfig":"13"},{"size":1716,"mtime":1610043095616,"results":"22","hashOfConfig":"13"},{"size":1452,"mtime":1609999604296,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1hrjz48",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\Users\\mathe\\Desktop\\gobarber-web\\src\\index.tsx",[],["51","52","53","54","55"],"C:\\Users\\mathe\\Desktop\\gobarber-web\\src\\App.tsx",[],"C:\\Users\\mathe\\Desktop\\gobarber-web\\src\\styles\\global.ts",[],"C:\\Users\\mathe\\Desktop\\gobarber-web\\src\\pages\\SignIn\\index.tsx",[],["56","57","58","59","60"],"C:\\Users\\mathe\\Desktop\\gobarber-web\\src\\pages\\SignIn\\styles.ts",[],"C:\\Users\\mathe\\Desktop\\gobarber-web\\src\\components\\Input\\index.tsx",["61"],"import React, {\n  InputHTMLAttributes,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport { IconBaseProps } from 'react-icons'; // propriedades que um ícone pode ter\nimport { useField } from '@unform/core';\nimport { Container } from './styles';\n\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n  name: string;\n  icon?: React.ComponentType<IconBaseProps>;\n}\n\nconst Input: React.FC<InputProps> = ({ name, icon: Icon, ...rest }) => {\n  const inputRef = useRef<HTMLInputElement>(null); // htmlinputelement , essa referência está armazenando a ref de um input\n  const [isFocused, setIsFocused] = useState(false);\n  const [isFilled, setIsFilled] = useState(false);\n  const { fieldName, defaultValue, error, registerField } = useField(name);\n  const handleInputBlur = useCallback(() => {\n    setIsFocused(false);\n    setIsFilled(!!inputRef.current?.value);\n  }, []); // é parecido com o useEffect\n\n  const handleInputFocus = useCallback(() => {\n    setIsFocused(true);\n  }, []);\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: 'value',\n    });\n  }, [fieldName, registerField]);\n  return (\n    <Container isFilled={isFilled} isFocused={isFocused}>\n      {Icon && <Icon size={20} />}\n      <input\n        onFocus={handleInputFocus} // arrow function pra não setar automáticamente, apenas quando estiver focado\n        onBlur={handleInputBlur}\n        defaultValue={defaultValue}\n        ref={inputRef}\n        {...rest}\n      />\n    </Container>\n  );\n};\nexport default Input;\n",["62","63","64","65","66"],"C:\\Users\\mathe\\Desktop\\gobarber-web\\src\\components\\Button\\index.tsx",[],"C:\\Users\\mathe\\Desktop\\gobarber-web\\src\\components\\Button\\styles.ts",[],"C:\\Users\\mathe\\Desktop\\gobarber-web\\src\\components\\Input\\styles.ts",[],["67","68","69","70","71"],"C:\\Users\\mathe\\Desktop\\gobarber-web\\src\\pages\\SignUp\\index.tsx",["72"],"C:\\Users\\mathe\\Desktop\\gobarber-web\\src\\pages\\SignUp\\styles.ts",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"73","replacedBy":"83"},{"ruleId":"75","replacedBy":"84"},{"ruleId":"77","replacedBy":"85"},{"ruleId":"79","replacedBy":"86"},{"ruleId":"81","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":21,"column":36,"nodeType":"90","messageId":"91","endLine":21,"endColumn":41},{"ruleId":"73","replacedBy":"92"},{"ruleId":"75","replacedBy":"93"},{"ruleId":"77","replacedBy":"94"},{"ruleId":"79","replacedBy":"95"},{"ruleId":"81","replacedBy":"96"},{"ruleId":"73","replacedBy":"97"},{"ruleId":"75","replacedBy":"98"},{"ruleId":"77","replacedBy":"99"},{"ruleId":"79","replacedBy":"100"},{"ruleId":"81","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":29,"column":7,"nodeType":"104","messageId":"105","endLine":29,"endColumn":18},"lines-around-directive",["106"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],["106"],[],[],[],[],"@typescript-eslint/no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar",["106"],[],[],[],[],["106"],[],[],[],[],"no-console","Unexpected console statement.","MemberExpression","unexpected","padding-line-between-statements"]